{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","type","id","class","onClick","toggleMode","for","TextForm","useState","text","setText","style","color","heading","rows","value","onChange","event","target","backgroundColor","newText","toUpperCase","showAlert","toLowerCase","console","log","document","getElementById","select","setSelectionRange","navigator","clipboard","writeText","split","join","length","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.fd9cdf57.chunk.js","sourcesContent":["import React from \"react\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          TextUtils\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            {/* <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">\r\n                About\r\n              </Link>\r\n            </li> */}\r\n          </ul>\r\n          <div class=\"form-check form-switch\">\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              id=\"flexSwitchCheckDefault\"\r\n              onClick={props.toggleMode}\r\n            />\r\n            <label\r\n              className={`form-check-label text-${props.mode==='light'?'dark':'light'}`}\r\n              for=\"flexSwitchCheckDefault\"\r\n            >\r\n              Enable Dark Mode\r\n            </label>\r\n          </div>\r\n\r\n          {/* <form className=\"d-flex\">\r\n            <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button className=\"btn btn-primary\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form> */}\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const [text, setText] = useState(\"\");\r\n\r\n  const handleUpClick = () => {\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to Upper Case!\",\"success\")\r\n  };\r\n\r\n  const handleLowClick = () => {\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to Lower Case!\",\"success\")\r\n  };\r\n\r\n  const handleClearClick = () => {\r\n    let newText = \"\";\r\n    setText(newText);\r\n    props.showAlert(\"Text Cleared!\",\"success\")\r\n  };\r\n\r\n  const handleOnChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n  // Credits: A\r\n  const handleCopy = () => {\r\n    console.log(\"I am copy\");\r\n    var text = document.getElementById(\"myBox\");\r\n    text.select();\r\n    text.setSelectionRange(0, 9999);\r\n    navigator.clipboard.writeText(text.value);\r\n    props.showAlert(\"Copied to Clipboard!\",\"success\")\r\n  };\r\n\r\n  // Credits: Coding Wala\r\n  const handleExtraSpaces = () => {\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"));\r\n    props.showAlert(\"Extra spaces removed!\",\"success\")\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\"\r\n        style={{\r\n          color : props.mode==='dark'?'white':'black'\r\n        }}>\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            id=\"myBox\"\r\n            rows=\"8\"\r\n            value={text}\r\n            onChange={handleOnChange}\r\n            style={{\r\n              backgroundColor : props.mode==='light'?'white':'gray',\r\n              color : props.mode==='dark'?'white':'black'\r\n            }}\r\n          ></textarea>\r\n        </div>\r\n\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-primary mx-1\"\r\n          onClick={handleUpClick}\r\n        >\r\n          Convert to Uppercase\r\n        </button>\r\n\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-primary mx-1\"\r\n          onClick={handleLowClick}\r\n        >\r\n          Convert to Lowercase\r\n        </button>\r\n\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-primary mx-1\"\r\n          onClick={handleClearClick}\r\n        >\r\n          Clear Text\r\n        </button>\r\n\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleCopy}>\r\n          Copy Text\r\n        </button>\r\n\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleExtraSpaces}>\r\n          Remove Extra Spaces\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"container my-2\" style={{\r\n          color : props.mode==='dark'?'white':'black'\r\n        }}>\r\n        <h2>Your text summary...</h2>\r\n        <p>\r\n          {text.split(\" \").length} words, {text.length} characters\r\n        </p>\r\n        <p>{0.008 * text.split(\" \").length} Minutes to Read!</p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length>0?text:\"Enter something in the textbox above to preview it here\"}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n\r\n    const capitalize= (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() +lower.slice(1);\r\n    }\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\nimport { useState } from 'react';\n//import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\";\n\nfunction App() {\n\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null)\n\n  const showAlert = (message, type)=>{\n    setAlert({\n      msg : message,\n      type : type\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 1500);\n  }\n\n  const toggleMode = ()=>{\n    if(mode === 'light'){\n      setMode('dark')\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode has been enabled\",\"success\");\n      //document.title = \"TextUtils | Dark Mode\";\n    }\n    else{\n      setMode('light')\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\",\"success\");\n      //document.title= \"TextUtils | Light Mode\";\n    }\n  }\n\n  return (\n    <>\n    {/* <Router> */}\n      <Navbar mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert}/>\n      <div className=\"container\">\n      {/* <Switch>\n          <Route exact path=\"/about\">\n            <About />\n          </Route>\n          <Route exact path=\"/\"> */}\n            <TextForm showAlert={showAlert} heading=\"Enter the text to analyze below : \" mode={mode} />\n          {/* </Route>\n      </Switch> */}\n      </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}